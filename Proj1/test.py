# -*- coding: utf-8 -*-
"""test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nnK-I0nqCEk-SCbIn9hOLf06mYvLJMZn
"""

import dlc_practical_prologue as prologue
import torch.nn as nn
import torch.nn.functional as F
import matplotlib.pyplot as plt
import torch
import pickle
from models import *
from SiameseHelpers import *

nb_epochs = 20
w_sharing = True
aux_loss = True
alpha = 0.2
print('We will run a test using a best model tuned with best hyperparameters on 20 epochs')
losses = torch.zeros(nb_epochs)
train_accuracy = torch.zeros(nb_epochs)
test_accuracy = torch.zeros(nb_epochs)
print("generating new model weights and data randomly")
train_input, train_target, train_classes, test_input, test_target, test_classes = prologue.generate_pair_sets(1000)
model = Siamese()
losses , test_accuracy, train_accuracy =  train_siamese_model(model, train_input, train_target ,train_classes, test_input, test_target ,\
                        nb_epochs = nb_epochs ,  w_sharing = w_sharing , aux_loss = aux_loss,  alpha = alpha )
print("training finished .. presenting results:")      
last_epoch_accuracy = test_accuracy[nb_epochs-1].item()
print("Our best model managed to reach a test accuracy = "+ "%.2f" %last_epoch_accuracy + "% after " +str(nb_epochs) + " epochs")



